/**
 * @file InfoUtilisateur.jsx
 * @description Composant pour afficher un message de bienvenue personnalis√© pour l'utilisateur en fonction de son pr√©nom.
 */

import { useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import { Utilisateur } from '../service/getData'; // Importer la fonction Utilisateur
import './InfoUtilisateur.scss';

/**
 * InfoUtilisateur
 *
 * @component
 * @description Ce composant affiche un message de bienvenue personnalis√© √† l'utilisateur
 * en fonction de son pr√©nom r√©cup√©r√© depuis l'API. Si aucune donn√©e n'est disponible, 
 * il affiche "Utilisateur" par d√©faut.
 *
 * @param {Object} props Les propri√©t√©s du composant.
 * @param {number} props.userId L'identifiant unique de l'utilisateur pour r√©cup√©rer ses informations.
 *
 * @returns {JSX.Element} Un message de bienvenue personnalis√©.
 *
 * @example
 * <InfoUtilisateur userId={12} />
 *
 * @throws Affiche "Utilisateur" si le pr√©nom n'est pas r√©cup√©r√© ou en cas d'erreur.
 */
export default function InfoUtilisateur({ userId }) {
    const [userName, setUserName] = useState('');

    useEffect(() => {
        const fetchUserData = async () => {
            try {
                const data = await Utilisateur(userId); // Appel √† la fonction Utilisateur
                
                // Acc√©der √† `userInfos` depuis `data`
                const firstName = data?.data?.userInfos?.firstName; 
                setUserName(firstName || 'Utilisateur');
            } catch (error) {
                console.error("Erreur lors de la r√©cup√©ration des donn√©es :", error);
            }
        };

        fetchUserData();
    }, [userId]);

    return (
        <div className="info-utilisateur">
            <h1>Bonjour, <span className="nom-utilisateur">{userName}</span></h1>
            <span>F√©licitations ! Vous avez explos√© vos objectifs hier&nbsp;üëè</span>
        </div>
    );
}

InfoUtilisateur.propTypes = {
    /** L'identifiant unique de l'utilisateur pour r√©cup√©rer ses informations. */
    userId: PropTypes.number.isRequired,
};
